# Generated by Django 4.1.5 on 2023-01-24 22:27

from django.conf import settings
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("users", "0002_user_allow_logging_user_preferred_taxonomies"),
        ("organisations", "0003_rename_user_organisationmember_member"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="LiteratureReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Literature review name must be between 3 and 100 long.",
                        max_length=100,
                        null=True,
                        validators=[
                            django.core.validators.MinLengthValidator(3),
                            django.core.validators.MaxLengthValidator(100),
                        ],
                        verbose_name="title",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        default="",
                        help_text="Project description",
                        null=True,
                        verbose_name="description",
                    ),
                ),
                (
                    "additional_description",
                    models.TextField(
                        blank=True,
                        default="",
                        help_text="Additional description field, for instance for topic narrative.",
                        null=True,
                    ),
                ),
                (
                    "tags",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(blank=True, max_length=250),
                        blank=True,
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "search_databases",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("project_deadline", models.DateField()),
                (
                    "annotations_per_paper",
                    models.IntegerField(
                        default=1,
                        help_text="How many reviewers need to screen every paper. Default is 1.",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(3),
                        ],
                    ),
                ),
                (
                    "search_queries",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(blank=True, max_length=250),
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "inclusion_criteria",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(blank=True, max_length=250),
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "exclusion_criteria",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(blank=True, max_length=250),
                        null=True,
                        size=None,
                    ),
                ),
                ("criteria", models.JSONField(blank=True, null=True)),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "min_decisions",
                    models.IntegerField(
                        default=1,
                        help_text="How many reviewers need to screen every paper. Default is 1.",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(3),
                        ],
                        verbose_name="minimum decisions per paper",
                    ),
                ),
                (
                    "data_format_version",
                    models.IntegerField(
                        default=3,
                        help_text="Version of the data format. This is used to migrate data between versions.",
                    ),
                ),
                ("papers", models.JSONField(null=True)),
                (
                    "discipline",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="users.knowledgearea",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LiteratureReviewMember",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[("AD", "Admin"), ("ME", "Member")],
                        default="ME",
                        max_length=2,
                    ),
                ),
                (
                    "literature_review",
                    models.ForeignKey(
                        help_text="Literature Review ID",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="literature_review.literaturereview",
                    ),
                ),
                (
                    "member",
                    models.ForeignKey(
                        help_text="User ID",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lrm_through",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="literaturereview",
            name="members",
            field=models.ManyToManyField(
                through="literature_review.LiteratureReviewMember",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="literaturereview",
            name="organisation",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="organisation",
                to="organisations.organisation",
            ),
        ),
    ]
